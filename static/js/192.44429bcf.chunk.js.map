{"version":3,"file":"static/js/192.44429bcf.chunk.js","mappings":"gRAsBA,EAnBkB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAK3B,OAFAC,QAAQC,IAAI,cAAeH,IAGzB,wBACGA,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKN,GAAL,OAAYI,GAApB,SACGC,KAFID,EADC,KAUjB,ECcD,EA5BiB,WACf,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAuB,mCAAG,8FAASC,EAAT,EAASA,KACvCH,GAAa,GADiB,mBAGNI,EAAAA,EAAAA,IAAsB,CAAED,KAAAA,IAHlB,OAGtBE,EAHsB,OAI5BP,GAAU,OAAIO,IAJc,gDAM5Bd,QAAQe,MAAR,MAN4B,yBAQ5BN,GAAa,GARe,4EAAH,sDAY7BE,EAAwB,CAAEC,KAAM,GACjC,GAAE,KAGD,4BACE,2CACCJ,GAAY,SAACQ,EAAA,EAAD,KAAa,SAAC,EAAD,CAAWlB,OAAQA,EAAQC,KAAM,cAGhE,C","sources":["components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n// import { useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies, path }) => {\n  // const location = useLocation();\n\n  console.log('movies=====', movies);\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`${path}${id}`}>\n            {title}\n            {/* state={{ from: location } */}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Loader from '../../components/Loader/Loader';\nimport { fetchTrendingMovieDay } from 'services/api';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getDataTrendingMovieDay = async ({ page }) => {\n      setIsLoading(true);\n      try {\n        const results = await fetchTrendingMovieDay({ page });\n        setMovies([...results]);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getDataTrendingMovieDay({ page: 1 });\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {isLoading ? <Loader /> : <MovieList movies={movies} path={'movies/'} />}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["movies","path","console","log","map","id","title","to","useState","setMovies","isLoading","setIsLoading","useEffect","getDataTrendingMovieDay","page","fetchTrendingMovieDay","results","error","Loader"],"sourceRoot":""}