{"version":3,"file":"static/js/329.e6a65a50.chunk.js","mappings":"4OACA,EAA0C,kDAA1C,EAAkH,8CAAlH,EAAuK,+BAAvK,EAAmN,qC,SCyEnN,EApEyB,WAAO,IAAD,IACvBA,ECH4B,WAClC,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcE,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,KAAKL,GAAUM,MAAMC,QAAQC,MACtD,GAAE,CAACP,IAEGH,CACR,CDNeW,GACRC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,8BACGf,IACC,gCACE,mBACEgB,UAAWC,EACXC,KAAK,SACLC,QAAS,0BAAMP,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUM,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EAHX,mCAQA,iBAAKL,UAAWC,EAAhB,WACE,0BACE,gBACED,UAAWC,EACXK,IAlBU,kCAkBatB,EAAMuB,YAC7BC,IAAKxB,EAAMyB,MACXC,MAAO,SAIX,4BACE,0BACG1B,EAAMyB,MADT,KACkBzB,EAAM2B,aAAaC,MAAM,EAAG,GAD9C,QAGA,yCAAiBC,KAAKC,MAA2B,GAArB9B,EAAM+B,cAAlC,QACA,sCACA,uBAAI/B,EAAMgC,YACV,oCACA,uBAAIhC,EAAMiC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAInD,4BACE,gBAAKrB,UAAWC,KAEhB,oDACA,2BACE,yBACE,SAAC,KAAD,CAASG,MAAO,CAAEC,KAAI,UAAEP,EAASM,aAAX,aAAE,EAAgBC,MAAQiB,GAAG,OAAnD,qBAIF,yBACE,SAAC,KAAD,CAASlB,MAAO,CAAEC,KAAI,UAAEP,EAASM,aAAX,aAAE,EAAgBC,MAAQiB,GAAG,UAAnD,2BAKJ,gBAAKtB,UAAWC,QAGlB,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAMX,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","hooks/UseFetchMovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetailsPageWrapper\":\"MovieDetailsPage_MovieDetailsPageWrapper__0m3zv\",\"MovieDetailsPageImg\":\"MovieDetailsPage_MovieDetailsPageImg__6CgR3\",\"line\":\"MovieDetailsPage_line__ow8Uo\",\"buttonBack\":\"MovieDetailsPage_buttonBack__2MJRb\"};","import { UseFetchMovieDetails } from '../../hooks/UseFetchMovieDetails';\nimport { useNavigate, useLocation, NavLink, Outlet } from 'react-router-dom';\nimport Loader from '../../components/Loader/Loader';\nimport { Suspense } from 'react';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const movie = UseFetchMovieDetails();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const posterPathStart = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <>\n      {movie && (\n        <section>\n          <button\n            className={css.buttonBack}\n            type=\"button\"\n            onClick={() => navigate(location?.state?.from ?? '/')}\n          >\n            ⬅️ Go back\n          </button>\n\n          <div className={css.MovieDetailsPageWrapper}>\n            <div>\n              <img\n                className={css.MovieDetailsPageImg}\n                src={posterPathStart + movie.poster_path}\n                alt={movie.title}\n                width={200}\n              />\n            </div>\n\n            <div>\n              <h3>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </h3>\n              <p>User scores: {Math.round(movie.vote_average * 10)}%</p>\n              <h4>Overview</h4>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </div>\n\n          <div>\n            <div className={css.line}></div>\n\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <NavLink state={{ from: location.state?.from }} to=\"cast\">\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink state={{ from: location.state?.from }} to=\"reviews\">\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n            <div className={css.line}></div>\n          </div>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieById } from '../services/api';\n\nexport const UseFetchMovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovie).catch(console.error);\n  }, [movieId]);\n\n  return movie;\n};\n"],"names":["movie","useState","setMovie","movieId","useParams","useEffect","fetchMovieById","then","catch","console","error","UseFetchMovieDetails","navigate","useNavigate","location","useLocation","className","css","type","onClick","state","from","src","poster_path","alt","title","width","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","to","Suspense","fallback","Loader"],"sourceRoot":""}